using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LaserPointer : MonoBehaviour {

    private SteamVR_TrackedObject trackedObj;
    // This is a reference to the Laser’s prefab.
    public GameObject laserPrefab;
    // laser stores a reference to an instance of the laser.
    private GameObject laser;
    // The transform component is stored for ease of use.
    private Transform laserTransform;
    // This is the position where the laser hits.
    private Vector3 hitPoint;


    private SteamVR_Controller.Device Controller
    {
        get { return SteamVR_Controller.Input((int)trackedObj.index); }
    }

    void Awake()
    {
        trackedObj = GetComponent<SteamVR_TrackedObject>();
    }

    private void ShowLaser(RaycastHit hit)
    {
        // Show the laser.
        laser.SetActive(true);
        // Position the laser between the controller and the point where the raycast hits. You use Lerp because you can give it two positions and the percent it should travel. If you pass it 0.5f, which is 50%, it returns the precise middle point.
        laserTransform.position = Vector3.Lerp(trackedObj.transform.position, hitPoint, .5f);
        // Point the laser at the position where the raycast hit.
        laserTransform.LookAt(hitPoint);
        // Scale the laser so it fits perfectly between the two positions.
        laserTransform.localScale = new Vector3(laserTransform.localScale.x, laserTransform.localScale.y,
            hit.distance);
    }

    // Use this for initialization
    void Start () {
        // Spawn a new laser and save a reference to it in laser.
        laser = Instantiate(laserPrefab);
        // Store the laser’s transform component.Store the laser’s transform component.
        laserTransform = laser.transform;
    }
	
	// Update is called once per frame
	void Update () {
        // If the touchpad is held down…
        if (Controller.GetPress(SteamVR_Controller.ButtonMask.Touchpad))
        {
            RaycastHit hit;

            // Shoot a ray from the controller. If it hits something, make it store the point where it hit and show the laser.
            if (Physics.Raycast(trackedObj.transform.position, transform.forward, out hit, 100))
            {
                hitPoint = hit.point;
                ShowLaser(hit);
            }
        }
        else // Hide the laser when the player released the touchpad.
        {
            laser.SetActive(false);
        }
    }
}
